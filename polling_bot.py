import logging
import subprocess
import json
import os
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏ –ø—É—Ç–∏ –∫ —Å–∫—Ä–∏–ø—Ç—É
with open("api_keys.json", "r") as f:
    config = json.load(f)

BOT_TOKEN = config["bot_token"]
SCRIPT_PATH = os.path.abspath("create_group.py")

# –û—Å–Ω–æ–≤–Ω–æ–π —Ö–µ–Ω–¥–ª–µ—Ä –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ
async def handle_new_post(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.channel_post:
        text = update.channel_post.text.strip()
        logging.info(f"üì¨ –ù–æ–≤—ã–π –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª–µ: {text}")

        try:
            # –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã
            result = subprocess.run(
                ["python3", SCRIPT_PATH, "--group", text],
                stdout=subprocess.PIPE,
                stderr=subprocess.STDOUT,
                text=True,
                timeout=60
            )
            logging.info("‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω:\n" + result.stdout)

            # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≥—Ä—É–ø–ø—É –∏–∑ –≤—ã–≤–æ–¥–∞
            lines = result.stdout.strip().splitlines()
            invite_link = next((line for line in lines if line.startswith("https://t.me/")), None)

            if invite_link:
                # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ ‚Äî –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏
                original_text = update.channel_post.text
                new_text = f"{original_text}\n\nüîó [–û–±—Å—É–¥–∏—Ç—å –∑–∞–¥–∞—á—É]({invite_link})"

                await context.bot.edit_message_text(
                    chat_id=update.channel_post.chat_id,
                    message_id=update.channel_post.message_id,
                    text=new_text,
                    parse_mode='Markdown',
                    disable_web_page_preview=True
                )
                logging.info("‚úèÔ∏è –ü–æ—Å—Ç –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –≥—Ä—É–ø–ø—É.")
            else:
                logging.warning("‚ö†Ô∏è –°—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –≤—ã–≤–æ–¥–µ —Å–∫—Ä–∏–ø—Ç–∞.")

        except subprocess.TimeoutExpired:
            logging.error("‚è≥ –°–∫—Ä–∏–ø—Ç –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.")
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ—Å—Ç–∞: {e}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(MessageHandler(filters.UpdateType.CHANNEL_POST, handle_new_post))
    logging.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω (polling)...")
    app.run_polling()